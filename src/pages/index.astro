---
import { BlogPost } from '../types'
import { List } from 'immutable'
import { DateTime } from 'luxon'
import BaseHead from '../components/BaseHead.astro'
import BaseLayout from '../layouts/BaseLayout.astro'

const mds = await Astro.glob<BlogPost>('./blog/*.(md|mdx)')
const publishablePosts = List(mds)
	.map(post => ({
		title: post.frontmatter.title,
		href: post.url,
		draft: post.frontmatter.draft,
		date: DateTime.fromISO(post.frontmatter.date).toISODate(),
	}))
	.filter(post => !post.draft)
	.sort((postA, postB) => {
		const dateA = new Date(postA.date)
		const dateB = new Date(postB.date)

		return dateB.valueOf() - dateA.valueOf()
	})
	.toJS()

const headProps = {
	title: "Roberto Tonino's corner",
	description: "The homepage of Roberto Tonino's website.",
	permalink: new URL(Astro.url.pathname, Astro.site),
}
---

<html lang="en" data-theme="typewriter">
	<head>
		<BaseHead {...headProps} />

		<link rel="preload" href="/assets/fonts/montserrat-v29-latin-700.woff2" as="font" type="font/woff2" crossorigin />
		<link rel="preload" href="/assets/fonts/lora-v32-latin-regular.woff2" as="font" type="font/woff2" crossorigin />
		<link rel="preload" href="/assets/fonts/MartianMonoVF.woff2" as="font" type="font/woff2" crossorigin />

		<style lang="scss">
			.published-post {
				&[data-new] {
					border-color: gold;
					background-color: hsl(51deg 100% 50% / 10%);
					position: relative;

					&::before {
						content: 'NEW';
						line-height: 1;
						opacity: 0.5;
						position: absolute;
						right: 0.5em;
						top: 0.5em;
					}
				}
			}
		</style>
	</head>
	<body>
		<BaseLayout>
			<div class="h-16 border-solid border-x-2 border-y-0 border-black max-w-screen-md mx-auto"/>

			<section class="mx-auto max-w-screen-md border-x-black border-solid border-t-2 border-b-2 border-x-2">
				<!--
				<div class="h-20 ">
					<h1 class="_px-2 _sm:px-8 _h-full _flex _items-center">Blog posts</h1>
				</div>

				<div>
				-->
					{
						publishablePosts.map(({ title, href, date }) => (
							<a
								rel="prefetch"
								href={href}
								class="published-post min-h-16 block border-solid border-t-2 border-b-0 border-x-0 py-4 px-8 text-foreground no-underline hover:bg-white hover:bg-opacity-10"
							>
								<span class="block uppercase text-2xl" style="font-family: Montserrat, sans-serif;">{title}</span>
								<time datetime={date} class="published-post__date text-xs capitalize text-opacity-75">
									{date}
								</time>
							</a>
						))
					}
				<!--
				</div>
				-->
			</section>
		</BaseLayout>

		<script>
			const ONE_WEEK = 1000 * 60 * 60 * 24 * 7
			const $dateEls = document.querySelectorAll('.published-post__date') as unknown as HTMLTimeElement[]

			$dateEls.forEach($dateEl => {
				const $parent = $dateEl.parentElement
				const date = $dateEl.getAttribute('datetime')
				const epoch = new Date(date).valueOf()
				const isNew = epoch > Date.now() - ONE_WEEK
				const options = {
					weekday: 'long',
					year: 'numeric',
					month: 'long',
					day: 'numeric',
				}
				const localeDate = new Date(date).toLocaleString(window.navigator.language, options)

				$dateEl.innerText = localeDate

				if (isNew) {
					$parent.dataset.new = ''
				}
			})
		</script>
	</body>
</html>
