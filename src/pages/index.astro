---
import { BlogPost } from '../types'
import { List } from 'immutable'
import { DateTime } from 'luxon'
import BaseHead from '../components/BaseHead.astro'
import BaseLayout from '../layouts/BaseLayout.astro'
// import { Picture } from 'astro:assets'
// import withThem from '../assets/with-them.jpg'
// import withDasha from '../assets/with_dasha_1.jpg'
// TODO Links with hover

const mds = await Astro.glob<BlogPost>('./blog/*.(md|mdx)')
const lastPost = List(mds)
	.map(post => ({
		title: post.frontmatter.title,
		href: post.url,
		draft: post.frontmatter.draft,
		date: DateTime.fromISO(post.frontmatter.date).toISODate(),
	}))
	.filter(post => !post.draft)
	.sort((postA, postB) => {
		const dateA = new Date(postA.date)
		const dateB = new Date(postB.date)

		return dateB.valueOf() - dateA.valueOf()
	})
	.first()
console.log({ lastPost })

const headProps = {
	title: "Roberto Tonino's corner",
	description: "The homepage of Roberto Tonino's website.",
	permalink: new URL(Astro.url.pathname, Astro.site),
}
---

<html lang="en" data-theme="typewriter">
	<head>
		<BaseHead {...headProps} />

		<link rel="preload" href="/assets/fonts/montserrat-v29-latin-700.woff2" as="font" type="font/woff2" crossorigin />
		<link rel="preload" href="/assets/fonts/lora-v32-latin-regular.woff2" as="font" type="font/woff2" crossorigin />
		<link rel="preload" href="/assets/fonts/MartianMonoVF.woff2" as="font" type="font/woff2" crossorigin />

		<style lang="scss">
			.hero {
				display: grid;
				grid-template-columns: repeat(2, 1fr);
				grid-template-rows: 600px 1fr;
				gap: 0px 0px;
				grid-auto-flow: row;
				grid-template-areas:
					'left-picture right-picture'
					'text right-picture';
				width: 100%;
				height: 100%;
			}

			.right-picture {
				grid-area: right-picture;
			}

			.left-picture {
				grid-area: left-picture;
			}

			.text {
				grid-area: text;
			}

			.published-post {
				&[data-new] {
					// border-color: gold;
					background-color: hsl(51deg 100% 50% / 10%);
					position: relative;

					&::before {
						content: 'NEW';
						line-height: 1;
						opacity: 0.5;
						position: absolute;
						right: 0.5em;
						top: 0.5em;
					}
				}
			}
		</style>
	</head>
	<body class="min-h-[100vh]">
		<BaseLayout>
			<!--
			<div class="mx-auto h-16 max-w-screen-md"></div>
			<div class="hero _flex _flex-row mx-auto max-w-screen-2xl">
				<Picture
					pictureAttributes={{ class: 'z-20 left-picture' }}
					width={withThem.width}
					height={withThem.height}
					src={withThem}
					widths={[300, 600, 900, 1200]}
					formats={['avif', 'webp']}
					class="h-auto max-w-screen-md -rotate-6"
					alt="The owner of this website with his girlfriend and some of his best friends, posing for a picture together in a balcony."
					title="SIUMMM"
				/>
				<Picture
					pictureAttributes={{ class: 'z-10 right-picture' }}
					width={withDasha.width}
					height={withDasha.height}
					src={withDasha}
					widths={[300, 600, 900, 1200]}
					formats={['avif', 'webp']}
					class="h-auto max-w-screen-sm rotate-6"
					alt="The owner of this website with his girlfriend and some of his best friends, posing for a picture together in a balcony."
					title="SIUMMM"
				/>
				<div class="text text-2xl">Quote goes here</div>
			</div>
        -->
			<section class="prose mx-auto mt-16 max-w-prose lg:prose-2xl">
				<p class="pl-4 sm:pl-8">
					My last blog post was posted on {lastPost.date} and has title: <a href={lastPost.href}>{lastPost.title}</a>
				</p>

				<p class="pl-4 sm:pl-8">
					Currently I am reading <a href="https://www.goodreads.com/book/show/2457487.Infinite_Jest"
						><strong>Infinite Jest</strong></a
					>
				</p>
			</section>

			<script>
				const ONE_WEEK = 1000 * 60 * 60 * 24 * 7
				const $dateEls = document.querySelectorAll('.published-post__date') as unknown as HTMLTimeElement[]

				$dateEls.forEach($dateEl => {
					const $parent = $dateEl.parentElement
					const date = $dateEl.getAttribute('datetime')
					const epoch = new Date(date).valueOf()
					const isNew = epoch > Date.now() - ONE_WEEK
					const options = {
						weekday: 'long',
						year: 'numeric',
						month: 'long',
						day: 'numeric',
					}
					const localeDate = new Date(date).toLocaleString(window.navigator.language, options)

					$dateEl.innerText = localeDate

					if (isNew) {
						$parent.dataset.new = ''
					}
				})
			</script>
		</BaseLayout>
	</body>
</html>
