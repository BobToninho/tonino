---
import BaseHead from '../../components/BaseHead.astro'
import BaseLayout from '../../layouts/BaseLayout.astro'
import { List } from 'immutable'

interface BlogPost {
	isDraft: boolean
	date: string
}

const permalink = Astro.request.canonicalURL.href

const publishablePosts = List(Astro.fetchContent<BlogPost>('./*.md'))
	.map(({ title, url, isDraft, date }) => ({
		title,
		href: url,
		isDraft,
		date,
	}))
	.filter(post => !post.isDraft)
	.sort((postA, postB) => {
		const dateA = new Date(postA.date)
		const dateB = new Date(postB.date)

		return dateB.getDate() - dateA.getDate()
	})
	.toJS()

const headProps = {
	title: "Roberto Tonino's Blog",
	description: '',
	permalink,
}
---

<html lang="en">
	<head>
		<BaseHead {...headProps} />
	</head>
	<body>
		<BaseLayout>
			<section class="container mb-8">
				<p>This is still under construction :)</p>
			</section>

			<section class="container">
				<h2>Blog posts</h2>

				<ul>
					{publishablePosts.map(({ title, href }) => (
						<li>
							<a href={href}>{title}</a>
						</li>
					))}
				</ul>
			</section>
		</BaseLayout>
	</body>
</html>
